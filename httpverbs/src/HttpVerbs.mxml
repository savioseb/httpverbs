<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="800" height="800"
					   initialize="windowedapplication1_initializeHandler(event)" 
					   xmlns:components="components.*"
					   >
	<fx:Style source="HttpVerbs.css"/>
	
	<fx:Script>
		<![CDATA[
			import classes.FileSelectAction;
			import classes.NameValuePair;
			
			import components.ParamComp;
			
			import events.DeleteEvent;
			import events.LoadWithParametersEvent;
			
			import mx.collections.ArrayList;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			private var startSearchFromIndex:int = 0;
			
			[Bindable]
			private var httpVerbs:ArrayList = null;
			
			public var backToState:String;
			
			private function windowedapplication1_initializeHandler(event:FlexEvent):void {
				httpVerbs = new ArrayList();
				httpVerbs.addItem( "get" );
				httpVerbs.addItem( "post" );
				httpVerbs.addItem( "put" );
				httpVerbs.addItem( "delete" );				
			}
			
			private function init():void {
				if( 0 < paramsGrp.numChildren ) {
					paramsGrp.removeAllElements();
				}
			}
			
			public function isParamsEmpty():Boolean {
				if( null == paramsGrp || !paramsGrp.initialized || 0 == paramsGrp.numChildren  ) {
					return true;
				}
				return false;
			}


			protected function button1_clickHandler(event:MouseEvent):void {
				if( isParamsEmpty() ) {
					currentState = "Parameters";
					if( null == paramsGrp || !paramsGrp.initialized ) {
						paramsGrp.initialize();
					}
				}
				var param:ParamComp = new ParamComp();
				param.initialize();
				param.addEventListener(DeleteEvent.DELETE, deleteParam );
				paramsGrp.addElement(param);
			}
			
			private function deleteParam(event:DeleteEvent):void {
				paramsGrp.removeElement( event.paramComp );
				if( 0 == paramsGrp.numChildren ) {
					currentState = "State1";
				} 
			}


			protected function sendbutton_clickHandler():void {
				var params:Object = new Object();
				if( isParamsEmpty() ) {
					currentState = "ResponseWOParams";
				} else {
					currentState = "ResponseWParams";
					for( var i:int = 0; i < paramsGrp.numChildren; i++ ) {
						var paramComp:ParamComp = paramsGrp.getElementAt(i) as ParamComp;
						params[paramComp.paramName] = paramComp.paramValue.text;
					}
				}
				
				responseTxtArea.text = '';
				httpServ.url = urlTextInp.text;
				var method:String = httpVerbs.getItemAt(methodComboBox.selectedIndex).toString();
				httpServ.method =  method;
				httpServ.send(params);
			}


			protected function httpServ_resultHandler(event:ResultEvent):void {
				responseTxtArea.text = event.result.toString();
			}


			protected function httpServ_faultHandler(event:FaultEvent):void {
				responseTxtArea.text = event.fault.message.toString();
			}


			protected function paramsTW_closeHandler(event:CloseEvent):void {
				paramsGrp.removeAllElements();
				currentState = "State1";
			}

			protected function responseTW_closeHandler(event:CloseEvent):void {
				if( 0 < paramsGrp.numChildren ) {
					currentState="Parameters";
				} else {
					currentState = "State1";
				}
			}


			protected function findTxtInp_keyDownHandler(event:KeyboardEvent):void {
				if( event.keyCode == Keyboard.ENTER && 0 < findTxtInp.text.length ) {
					findNextButtonClick_clickHandler();
				} else {
					startSearchFromIndex = 0;
				}
			}


			protected function findNextButtonClick_clickHandler(event:MouseEvent=null):void {
				startSearchFromIndex = responseTxtArea.text.indexOf(findTxtInp.text, startSearchFromIndex );
				responseTxtArea.setFocus();
				responseTxtArea.setSelection( startSearchFromIndex , startSearchFromIndex+findTxtInp.text.length );
				startSearchFromIndex += findTxtInp.text.length;
			}
			
			
			private function saveHandler():void {
				backToState = currentState;
				currentState="Load";
				fileSelect.init(FileSelectAction.SAVE, this);
			}


			protected function loadHandler():void {
				backToState = currentState;
				currentState="Load";
				fileSelect.init(FileSelectAction.OPEN, this);
			}


			protected function fileSelect_loadWithParamsHandler(event:LoadWithParametersEvent):void {
				currentState = "Parameters";
				if( !isParamsEmpty() ) {
					paramsGrp.removeAllElements();
				}
				for( var i:int = 0; i < event.params.length; i++ ) {
					var nameValuePair:Object = event.params.source.pop();
					var paramComp:ParamComp = new ParamComp();
					paramComp.paramName = nameValuePair.name;
					paramComp.paramValue.text = nameValuePair.value;
					paramsGrp.addElement( paramComp );
				}
			}


			protected function saveResponseBtn_clickHandler():void {
				backToState = currentState;
				currentState="Load";
				fileSelect.init(FileSelectAction.SAVE_RESPONSE, this);
			}


			protected function saveResponseBtn_keyDownHandler(event:KeyboardEvent):void {
				if( event.keyCode == Keyboard.ENTER ) {
					saveResponseBtn_clickHandler();
				}
			}


			protected function aboutHandler():void {
				backToState = currentState;
				currentState = "About";
			}


			protected function aboutTW_closeHandler(event:CloseEvent):void {
				currentState = backToState;
			}

		]]>
	</fx:Script>
	<s:states>
		<s:State name="State1"/>
		<s:State name="ResponseWParams"/>
		<s:State name="Parameters"/>
		<s:State name="ResponseWOParams"/>
		<s:State name="Load"/>
		<s:State name="About"/>
	</s:states>
	
	
	<fx:Declarations>
		<s:HTTPService id="httpServ"
					   resultFormat="text"
					   result="httpServ_resultHandler(event)"
					   fault="httpServ_faultHandler(event)"
					   />
	</fx:Declarations>
	

	<s:VGroup x="10" y="10" width="100%" height="100%" >
		
		<s:Label text="Http Verbs 1.0" fontSize="36"   />
		
		<components:ButtonGroup 
			send="sendbutton_clickHandler()" 
			save="saveHandler()"
			load="loadHandler()"
			about="aboutHandler()"
			/>
		
		<components:AboutTW
			width="100%" height="100%"
			close="aboutTW_closeHandler(event)"
			includeIn="About"
			/>
		
		<mx:Form paddingTop="0" includeIn="Parameters,ResponseWOParams,ResponseWParams,State1">
			<mx:FormItem label="Url" >
				<s:TextInput id="urlTextInp" text="http://google.com/search" width="500"/>
			</mx:FormItem>
			
			<mx:FormItem label="Method" >
				<s:ComboBox id="methodComboBox" dataProvider="{httpVerbs}" selectedIndex="0"/>
			</mx:FormItem>
			
			<mx:FormItem label="Add Param" >
				<s:Button label="+" click="button1_clickHandler(event)"/>
			</mx:FormItem>
			
		</mx:Form>
		
		<components:FileSelect
			id="fileSelect"
			width="100%"
			height="70%"
			includeIn="Load"
			back="currentState=backToState;"
			loadWithParams="fileSelect_loadWithParamsHandler(event)"
			/>
		
		
		<s:TitleWindow 
			title="Parameters for {urlTextInp.text}" 
			width="100%" height="150"
			close="paramsTW_closeHandler(event)"
			includeIn="Parameters,ResponseWParams">
			
			<s:Scroller id="scrllr"
				focusEnabled="false"
				hasFocusableChildren="true"
				width="100%"
				height="100%"
				horizontalCenter="0" 
				verticalCenter="0"
				>
				<s:VGroup id="paramsGrp" 
						  paddingLeft="10" 
						  paddingRight="10" 
						  paddingTop="10" 
						  paddingBottom="10"
						  
						  />
			
			</s:Scroller>
		</s:TitleWindow>
		
		<s:TitleWindow 
			title="Response from {urlTextInp.text}" 
			width="100%" 
			height="100%"  
			includeIn="ResponseWOParams,ResponseWParams" 
			close="responseTW_closeHandler(event)"
			>
			
			<s:VGroup width="100%" height="100%">
				
				<s:HGroup verticalAlign="middle">
					
					<s:Button label="Save Response" click="saveResponseBtn_clickHandler()" keyDown="saveResponseBtn_keyDownHandler(event)"/>
					
					<mx:VRule height="20" />
					
					<s:Label text="Find" />
					
					<s:TextInput id="findTxtInp" 
								 keyDown="findTxtInp_keyDownHandler(event)"
								 />
					<s:Button label="Next" 
							  click="findNextButtonClick_clickHandler(event)" 
							  keyDown="findTxtInp_keyDownHandler(event)"
							  />
					
				</s:HGroup>
				<mx:TextArea id="responseTxtArea" editable="false" width="100%" height="100%" />
			</s:VGroup>
			
		</s:TitleWindow>
		
		
	</s:VGroup>
	
</s:WindowedApplication>
